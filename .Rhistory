plot(-10,
xlim=c(min(x.vals)-1,max(x.vals)+1),
ylim=c(min(lambda.island.out$lower),max(lambda.island.out$upper)),
frame.plot=F,
ylab="Abundance (birds / ha)",
xlab="Species",
las=1,
xaxt="n",
cex=2,
pch=16)
# spp.converter w/ all spp., symbols for figure
spp.converter<-c("apop"="mist",
"clma"="gowe",
"dima"="(bldr$)",
"gaxa"="wtgd",
"gaga"="(chic)",
"mota"="timo",
"myru"="mihe",
"ptro"="mafd",
"rhru"="rufa",
"stbi"="(iscd)",
"toch"="cokf",
"zoco"="brwe$",
"mela"="mime*",
"coku"="rocr*",
"gyal"="whte*")
#orderbird <- order(tapply(lambda.island.out$Predicted,lambda.island.out$spp,mean),decreasing=F) # not working
orderbird<- c(3,8,14,11,10,6,7,1,12,9,2,15,13,5,4) # vector with preferred order
for(i in 1:length(levels(birdcounts.long$spp))) {
sp.set <- subset(lambda.island.out,lambda.island.out$spp==levels(birdcounts.long$spp)[orderbird[i]])
rownames(sp.set) <- sp.set$island
if(all(is.na(sp.set["Rota",]))) sp.set["Rota",] <- NA
if(all(is.na(sp.set["Tinian",]))) sp.set["Tinian",] <- NA
if(all(is.na(sp.set["Saipan",]))) sp.set["Saipan",] <- NA
sp.set <- sp.set[c("Saipan","Tinian","Rota"),]
sp.set[is.na(sp.set)] <- 0 # These are true zeros
segments(x0=x.vals[i,],y0=sp.set$lower,y1=sp.set$upper,
lwd=10,
lend="butt",
col=c("grey30","grey60","grey90"))
points(x.vals[i,],sp.set[,"Predicted"],
pch=c(21,22,23),
bg="white")
}
legend("topleft",pch=c(21,22,23),
legend=c("Saipan","Tinian","Rota"),
bty="n")
axis(1, at= x.vals[,2], labels = levels(revalue(birdcounts.long$spp,spp.converter))[orderbird], las=2)
orderbird <- order(tapply(lambda.island.out$Predicted,lambda.island.out$spp,mean),decreasing=F) # not working
quartz()
par(mfrow=c(1,1),pin=c(7,5))
plot(-10,
xlim=c(min(x.vals)-1,max(x.vals)+1),
ylim=c(min(lambda.island.out$lower),max(lambda.island.out$upper)),
frame.plot=F,
ylab="Abundance (birds / ha)",
xlab="Species",
las=1,
xaxt="n",
cex=2,
pch=16)
orderbird <- order(tapply(lambda.island.out$Predicted,lambda.island.out$spp,mean),decreasing=F) # not working
#orderbird<- c(3,8,14,11,10,6,7,1,12,9,2,15,13,5,4) # vector with preferred order
for(i in 1:length(levels(birdcounts.long$spp))) {
sp.set <- subset(lambda.island.out,lambda.island.out$spp==levels(birdcounts.long$spp)[orderbird[i]])
rownames(sp.set) <- sp.set$island
if(all(is.na(sp.set["Rota",]))) sp.set["Rota",] <- NA
if(all(is.na(sp.set["Tinian",]))) sp.set["Tinian",] <- NA
if(all(is.na(sp.set["Saipan",]))) sp.set["Saipan",] <- NA
sp.set <- sp.set[c("Saipan","Tinian","Rota"),]
sp.set[is.na(sp.set)] <- 0 # These are true zeros
segments(x0=x.vals[i,],y0=sp.set$lower,y1=sp.set$upper,
lwd=10,
lend="butt",
col=c("grey30","grey60","grey90"))
points(x.vals[i,],sp.set[,"Predicted"],
pch=c(21,22,23),
bg="white")
}
legend("topleft",pch=c(21,22,23),
legend=c("Saipan","Tinian","Rota"),
bty="n")
axis(1, at= x.vals[,2], labels = levels(revalue(birdcounts.long$spp,spp.converter))[orderbird], las=2)
abund.long <- lambda.out[,c(1,2,6)]
head(abund.long)
lambda.island.out <- read.csv("./data/lambda.island.out.csv",row.names=1)
phi.island.out <- read.csv("./data/phi.island.out.csv",row.names=1)
det.island.out <- read.csv("./data/det.island.out.csv",row.names=1)
lambda.island.out
lambda.island.out$spp <- as.character(lambda.island.out$spp)
lambda.island.out$island <- as.character(lambda.island.out$island)
interval <- c(1,1,4)
x.vals <- c(1,1+cumsum(rep(interval,length(levels(birdcounts.long$spp)))))
x.vals <- x.vals[1:(length(x.vals)-1)]
x.vals <- matrix(x.vals,ncol=3,byrow=T)
quartz()
par(mfrow=c(1,1),pin=c(7,5))
plot(-10,
xlim=c(min(x.vals)-1,max(x.vals)+1),
ylim=c(min(lambda.island.out$lower),max(lambda.island.out$upper)),
frame.plot=F,
ylab="Abundance (birds / ha)",
xlab="Species",
las=1,
xaxt="n",
cex=2,
pch=16)
# spp.converter w/ all spp., symbols for figure
spp.converter<-c("apop"="mist",
"clma"="gowe",
"dima"="(bldr$)",
"gaxa"="wtgd",
"gaga"="(chic)",
"mota"="timo",
"myru"="mihe",
"ptro"="mafd",
"rhru"="rufa",
"stbi"="(iscd)",
"toch"="cokf",
"zoco"="brwe$",
"mela"="mime*",
"coku"="rocr*",
"gyal"="whte*")
# convert estimates to new species name
lambda.island.out$spp<-revalue(lambda.island.out$spp,spp.converter)
phi.island.out$spp<-revalue(phi.island.out$spp,spp.converter)
det.island.out$spp<-revalue(det.island.out$spp,spp.converter)
levels(birdcounts.long$spp)<-revalue(birdcounts.long$spp,spp.converter)
levels(lambda.island.out$spp)<-revalue(lambda.island.out$spp,spp.converter)
levels(birdcounts.long$spp)
orderbird <- order(tapply(lambda.island.out$Predicted,lambda.island.out$spp,mean),decreasing=F) # not working
#orderbird<- c(3,8,14,11,10,6,7,1,12,9,2,15,13,5,4) # vector with preferred order
for(i in 1:length(levels(birdcounts.long$spp))) {
sp.set <- subset(lambda.island.out,lambda.island.out$spp==levels(birdcounts.long$spp)[orderbird[i]])
rownames(sp.set) <- sp.set$island
if(all(is.na(sp.set["Rota",]))) sp.set["Rota",] <- NA
if(all(is.na(sp.set["Tinian",]))) sp.set["Tinian",] <- NA
if(all(is.na(sp.set["Saipan",]))) sp.set["Saipan",] <- NA
sp.set <- sp.set[c("Saipan","Tinian","Rota"),]
sp.set[is.na(sp.set)] <- 0 # These are true zeros
segments(x0=x.vals[i,],y0=sp.set$lower,y1=sp.set$upper,
lwd=10,
lend="butt",
col=c("grey30","grey60","grey90"))
points(x.vals[i,],sp.set[,"Predicted"],
pch=c(21,22,23),
bg="white")
}
legend("topleft",pch=c(21,22,23),
legend=c("Saipan","Tinian","Rota"),
bty="n")
axis(1, at= x.vals[,2], labels = levels(revalue(birdcounts.long$spp,spp.converter))[orderbird], las=2)
lambda.island.out
birdcounts.long
levels(birdcounts.long$spp)<-revalue(birdcounts.long$spp,spp.converter)
birdcounts.long$spp
# Read in data. Each row = one species at each point.
birdcounts <- read.table("./data/fulldata.txt", header=T) #load your data.
str(birdcounts)
# change format of date
birdcounts$date <- as.Date(birdcounts$date, "%m/%d/%y")
# make species levels lowercase
birdcounts$spp <- as.factor(as.character(tolower(birdcounts$spp)))
# change from wide to long format
birdcounts.long <- untable(birdcounts[,c(1:6,8:11)], num=birdcounts[,7])
# Read in data. Each row = one species at each point.
birdcounts <- read.table("./data/fulldata.txt", header=T) #load your data.
str(birdcounts)
# change format of date
birdcounts$date <- as.Date(birdcounts$date, "%m/%d/%y")
# make species levels lowercase
birdcounts$spp <- as.factor(as.character(tolower(birdcounts$spp)))
# make unique identifier for each count (point plus date) and each site date (site plus date)
birdcounts$pointdate <- as.factor(paste(birdcounts$point, birdcounts$date, sep=" "))
birdcounts$sitedate <- as.factor(paste(birdcounts$site, birdcounts$date, sep=" "))
# pull out point-level information, and put in alphabetical order by point
# to be used later, after we use the formatDataDist function
point.data <- birdcounts[!duplicated(birdcounts[2:4]),]
point.data <- point.data[order(point.data$point),]
point.data <- point.data[,-c(5:9)]
# change from wide to long format
birdcounts.long <- untable(birdcounts[,c(1:6,8:11)], num=birdcounts[,7])
# Remove the 6th occasion to achieve equal samples for each site (Tinian just has 5 occasions, rather than 6)
# Otherwise, the code interprets it as though Tinians just has super low densities
birdcounts.long <- subset(birdcounts.long, occasion <6)
birdcounts.long$spp
lambda.island.out
levels(birdcounts.long$spp)<-revalue(birdcounts.long$spp,spp.converter)
levels(lambda.island.out$spp)<-revalue(lambda.island.out$spp,spp.converter)
levels(birdcounts.long$spp)
orderbird <- order(tapply(lambda.island.out$Predicted,lambda.island.out$spp,mean),decreasing=F) # not working
#orderbird<- c(3,8,14,11,10,6,7,1,12,9,2,15,13,5,4) # vector with preferred order
for(i in 1:length(levels(birdcounts.long$spp))) {
sp.set <- subset(lambda.island.out,lambda.island.out$spp==levels(birdcounts.long$spp)[orderbird[i]])
rownames(sp.set) <- sp.set$island
if(all(is.na(sp.set["Rota",]))) sp.set["Rota",] <- NA
if(all(is.na(sp.set["Tinian",]))) sp.set["Tinian",] <- NA
if(all(is.na(sp.set["Saipan",]))) sp.set["Saipan",] <- NA
sp.set <- sp.set[c("Saipan","Tinian","Rota"),]
sp.set[is.na(sp.set)] <- 0 # These are true zeros
segments(x0=x.vals[i,],y0=sp.set$lower,y1=sp.set$upper,
lwd=10,
lend="butt",
col=c("grey30","grey60","grey90"))
points(x.vals[i,],sp.set[,"Predicted"],
pch=c(21,22,23),
bg="white")
}
legend("topleft",pch=c(21,22,23),
legend=c("Saipan","Tinian","Rota"),
bty="n")
axis(1, at= x.vals[,2], labels = levels(revalue(birdcounts.long$spp,spp.converter))[orderbird], las=2)
interval <- c(1,1,4)
dev.off
dev.off()
interval <- c(1,1,4)
x.vals <- c(1,1+cumsum(rep(interval,length(levels(birdcounts.long$spp)))))
x.vals <- x.vals[1:(length(x.vals)-1)]
x.vals <- matrix(x.vals,ncol=3,byrow=T)
quartz()
par(mfrow=c(1,1),pin=c(7,5))
plot(-10,
xlim=c(min(x.vals)-1,max(x.vals)+1),
ylim=c(min(lambda.island.out$lower),max(lambda.island.out$upper)),
frame.plot=F,
ylab="Abundance (birds / ha)",
xlab="Species",
las=1,
xaxt="n",
cex=2,
pch=16)
dev.off()
interval <- c(1,1,4)
x.vals <- c(1,1+cumsum(rep(interval,length(levels(birdcounts.long$spp)))))
x.vals <- x.vals[1:(length(x.vals)-1)]
x.vals <- matrix(x.vals,ncol=3,byrow=T)
quartz()
par(mfrow=c(1,1),pin=c(6,5))
plot(-10,
xlim=c(min(x.vals)-1,max(x.vals)+1),
ylim=c(min(lambda.island.out$lower),max(lambda.island.out$upper)),
frame.plot=F,
ylab="Abundance (birds / ha)",
xlab="Species",
las=1,
xaxt="n",
cex=2,
pch=16)
dev.off()
interval <- c(1,1,4)
x.vals <- c(1,1+cumsum(rep(interval,length(levels(birdcounts.long$spp)))))
x.vals <- x.vals[1:(length(x.vals)-1)]
x.vals <- matrix(x.vals,ncol=3,byrow=T)
quartz()
par(mfrow=c(1,1),pin=c(5,7))
plot(-10,
xlim=c(min(x.vals)-1,max(x.vals)+1),
ylim=c(min(lambda.island.out$lower),max(lambda.island.out$upper)),
frame.plot=F,
ylab="Abundance (birds / ha)",
xlab="Species",
las=1,
xaxt="n",
cex=2,
pch=16)
dev.off()
interval <- c(1,1,4)
x.vals <- c(1,1+cumsum(rep(interval,length(levels(birdcounts.long$spp)))))
x.vals <- x.vals[1:(length(x.vals)-1)]
x.vals <- matrix(x.vals,ncol=3,byrow=T)
quartz()
par(mfrow=c(1,1),pin=c(6,4))
plot(-10,
xlim=c(min(x.vals)-1,max(x.vals)+1),
ylim=c(min(lambda.island.out$lower),max(lambda.island.out$upper)),
frame.plot=F,
ylab="Abundance (birds / ha)",
xlab="Species",
las=1,
xaxt="n",
cex=2,
pch=16)
#orderbird <- order(tapply(lambda.island.out$Predicted,lambda.island.out$spp,mean),decreasing=F) # not working
orderbird<- c(3,8,14,11,10,6,7,1,12,9,2,15,13,5,4) # vector with preferred order
for(i in 1:length(levels(birdcounts.long$spp))) {
sp.set <- subset(lambda.island.out,lambda.island.out$spp==levels(birdcounts.long$spp)[orderbird[i]])
rownames(sp.set) <- sp.set$island
if(all(is.na(sp.set["Rota",]))) sp.set["Rota",] <- NA
if(all(is.na(sp.set["Tinian",]))) sp.set["Tinian",] <- NA
if(all(is.na(sp.set["Saipan",]))) sp.set["Saipan",] <- NA
sp.set <- sp.set[c("Saipan","Tinian","Rota"),]
sp.set[is.na(sp.set)] <- 0 # These are true zeros
segments(x0=x.vals[i,],y0=sp.set$lower,y1=sp.set$upper,
lwd=10,
lend="butt",
col=c("grey30","grey60","grey90"))
points(x.vals[i,],sp.set[,"Predicted"],
pch=c(21,22,23),
bg="white")
}
legend("topleft",pch=c(21,22,23),
legend=c("Saipan","Tinian","Rota"),
bty="n")
axis(1, at= x.vals[,2], labels = levels(revalue(birdcounts.long$spp,spp.converter))[orderbird], las=2)
dev.off()
quartz()
par(mfrow=c(1,1),pin=c(6,4))
plot(-10,
xlim=c(min(x.vals)-1,max(x.vals)+1),
ylim=c(min(lambda.island.out$lower),max(lambda.island.out$upper)),
frame.plot=F,
ylab="Abundance (birds / ha)",
xlab="Species",
las=1,
xaxt="n",
cex=2,
pch=16)
orderbird <- order(tapply(lambda.island.out$Predicted,lambda.island.out$spp,mean),decreasing=F) # not working
orderbird
#orderbird<- c(3,8,14,11,10,6,7,1,12,9,2,15,13,5,4) # vector with preferred order
for(i in 1:length(levels(birdcounts.long$spp))) {
sp.set <- subset(lambda.island.out,lambda.island.out$spp==levels(birdcounts.long$spp)[orderbird[i]])
rownames(sp.set) <- sp.set$island
if(all(is.na(sp.set["Rota",]))) sp.set["Rota",] <- NA
if(all(is.na(sp.set["Tinian",]))) sp.set["Tinian",] <- NA
if(all(is.na(sp.set["Saipan",]))) sp.set["Saipan",] <- NA
sp.set <- sp.set[c("Saipan","Tinian","Rota"),]
sp.set[is.na(sp.set)] <- 0 # These are true zeros
segments(x0=x.vals[i,],y0=sp.set$lower,y1=sp.set$upper,
lwd=10,
lend="butt",
col=c("grey30","grey60","grey90"))
points(x.vals[i,],sp.set[,"Predicted"],
pch=c(21,22,23),
bg="white")
}
legend("topleft",pch=c(21,22,23),
legend=c("Saipan","Tinian","Rota"),
bty="n")
axis(1, at= x.vals[,2], labels = levels(revalue(birdcounts.long$spp,spp.converter))[orderbird], las=2)
axis(1, at= x.vals[,2], labels = levels(birdcounts.long))[orderbird], las=2)
axis(1, at= x.vals[,2], labels = levels(birdcounts.long)[orderbird], las=2)
dev.off()
quartz()
par(mfrow=c(1,1),pin=c(6,4))
plot(-10,
xlim=c(min(x.vals)-1,max(x.vals)+1),
ylim=c(min(lambda.island.out$lower),max(lambda.island.out$upper)),
frame.plot=F,
ylab="Abundance (birds / ha)",
xlab="Species",
las=1,
xaxt="n",
cex=2,
pch=16)
levels(birdcounts.long$spp)
orderbird <- order(tapply(lambda.island.out$Predicted,lambda.island.out$spp,mean),decreasing=F) # not working
#orderbird<- c(3,8,14,11,10,6,7,1,12,9,2,15,13,5,4) # vector with preferred order
for(i in 1:length(levels(birdcounts.long$spp))) {
sp.set <- subset(lambda.island.out,lambda.island.out$spp==levels(birdcounts.long$spp)[orderbird[i]])
rownames(sp.set) <- sp.set$island
if(all(is.na(sp.set["Rota",]))) sp.set["Rota",] <- NA
if(all(is.na(sp.set["Tinian",]))) sp.set["Tinian",] <- NA
if(all(is.na(sp.set["Saipan",]))) sp.set["Saipan",] <- NA
sp.set <- sp.set[c("Saipan","Tinian","Rota"),]
sp.set[is.na(sp.set)] <- 0 # These are true zeros
segments(x0=x.vals[i,],y0=sp.set$lower,y1=sp.set$upper,
lwd=10,
lend="butt",
col=c("grey30","grey60","grey90"))
points(x.vals[i,],sp.set[,"Predicted"],
pch=c(21,22,23),
bg="white")
}
legend("topleft",pch=c(21,22,23),
legend=c("Saipan","Tinian","Rota"),
bty="n")
axis(1, at= x.vals[,2], labels = levels(birdcounts.long)[orderbird], las=2)
levels(birdcounts.long)[orderbird]
axis(1, at= x.vals[,2], labels = levels(revalue(birdcounts.long$spp))[orderbird], las=2)
axis(1, at= x.vals[,2], labels = levels(birdcounts.long$spp)[orderbird], las=2)
levels(birdcounts.long$spp)
dev.off()
quartz()
par(mfrow=c(1,1),pin=c(6,4))
plot(-10,
xlim=c(min(x.vals)-1,max(x.vals)+1),
ylim=c(min(lambda.island.out$lower),max(lambda.island.out$upper)),
frame.plot=F,
ylab="Abundance (birds / ha)",
xlab="Species",
las=1,
xaxt="n",
cex=2,
pch=16)
# spp.converter w/ all spp., symbols for figure
spp.converter<-c("apop"="mist",
"clma"="gowe",
"dima"="(bldr$)",
"gaxa"="wtgd",
"gaga"="(chic)",
"mota"="timo",
"myru"="mihe",
"ptro"="mafd",
"rhru"="rufa",
"stbi"="(iscd)",
"toch"="cokf",
"zoco"="brwe$",
"mela"="mime*",
"coku"="rocr*",
"gyal"="whte*")
orderbird <- order(tapply(lambda.island.out$Predicted,lambda.island.out$spp,mean),decreasing=F) # not working
#orderbird<- c(3,8,14,11,10,6,7,1,12,9,2,15,13,5,4) # vector with preferred order
for(i in 1:length(levels(birdcounts.long$spp))) {
sp.set <- subset(lambda.island.out,lambda.island.out$spp==levels(birdcounts.long$spp)[orderbird[i]])
rownames(sp.set) <- sp.set$island
if(all(is.na(sp.set["Rota",]))) sp.set["Rota",] <- NA
if(all(is.na(sp.set["Tinian",]))) sp.set["Tinian",] <- NA
if(all(is.na(sp.set["Saipan",]))) sp.set["Saipan",] <- NA
sp.set <- sp.set[c("Saipan","Tinian","Rota"),]
sp.set[is.na(sp.set)] <- 0 # These are true zeros
segments(x0=x.vals[i,],y0=sp.set$lower,y1=sp.set$upper,
lwd=10,
lend="butt",
col=c("grey30","grey60","grey90"))
points(x.vals[i,],sp.set[,"Predicted"],
pch=c(21,22,23),
bg="white")
}
legend("topleft",pch=c(21,22,23),
legend=c("Saipan","Tinian","Rota"),
bty="n")
axis(1, at= x.vals[,2], labels = levels(birdcounts.long$spp)[orderbird], las=2)
x.vals[,2]
length(x.vals[,2])
levels(birdcounts.long$spp)
length(levels(birdcounts.long$spp))
interval <- c(1,1,4)
x.vals <- c(1,1+cumsum(rep(interval,length(levels(birdcounts.long$spp)))))
x.vals <- x.vals[1:(length(x.vals)-1)]
x.vals <- matrix(x.vals,ncol=3,byrow=T)
quartz()
par(mfrow=c(1,1),pin=c(6,4))
plot(-10,
xlim=c(min(x.vals)-1,max(x.vals)+1),
ylim=c(min(lambda.island.out$lower),max(lambda.island.out$upper)),
frame.plot=F,
ylab="Abundance (birds / ha)",
xlab="Species",
las=1,
xaxt="n",
cex=2,
pch=16)
levels(birdcounts.long$spp)
orderbird <- order(tapply(lambda.island.out$Predicted,lambda.island.out$spp,mean),decreasing=F) # not working
#orderbird<- c(3,8,14,11,10,6,7,1,12,9,2,15,13,5,4) # vector with preferred order
for(i in 1:length(levels(birdcounts.long$spp))) {
sp.set <- subset(lambda.island.out,lambda.island.out$spp==levels(birdcounts.long$spp)[orderbird[i]])
rownames(sp.set) <- sp.set$island
if(all(is.na(sp.set["Rota",]))) sp.set["Rota",] <- NA
if(all(is.na(sp.set["Tinian",]))) sp.set["Tinian",] <- NA
if(all(is.na(sp.set["Saipan",]))) sp.set["Saipan",] <- NA
sp.set <- sp.set[c("Saipan","Tinian","Rota"),]
sp.set[is.na(sp.set)] <- 0 # These are true zeros
segments(x0=x.vals[i,],y0=sp.set$lower,y1=sp.set$upper,
lwd=10,
lend="butt",
col=c("grey30","grey60","grey90"))
points(x.vals[i,],sp.set[,"Predicted"],
pch=c(21,22,23),
bg="white")
}
legend("topleft",pch=c(21,22,23),
legend=c("Saipan","Tinian","Rota"),
bty="n")
axis(1, at= x.vals[,2], labels = levels(birdcounts.long$spp)[orderbird], las=2)
quartz()
par(mfrow=c(1,1),pin=c(6,4))
plot(-10,
xlim=c(min(x.vals)-1,max(x.vals)+1),
ylim=c(min(lambda.island.out$lower),max(lambda.island.out$upper)),
frame.plot=F,
ylab="Abundance (birds / ha)",
xlab="Species",
las=1,
xaxt="n",
cex=2,
pch=16)
levels(birdcounts.long$spp)
#orderbird <- order(tapply(lambda.island.out$Predicted,lambda.island.out$spp,mean),decreasing=F) # not working
orderbird<- c(3,8,14,11,10,6,7,1,12,9,2,15,13,5,4) # vector with preferred order
for(i in 1:length(levels(birdcounts.long$spp))) {
sp.set <- subset(lambda.island.out,lambda.island.out$spp==levels(birdcounts.long$spp)[orderbird[i]])
rownames(sp.set) <- sp.set$island
if(all(is.na(sp.set["Rota",]))) sp.set["Rota",] <- NA
if(all(is.na(sp.set["Tinian",]))) sp.set["Tinian",] <- NA
if(all(is.na(sp.set["Saipan",]))) sp.set["Saipan",] <- NA
sp.set <- sp.set[c("Saipan","Tinian","Rota"),]
sp.set[is.na(sp.set)] <- 0 # These are true zeros
segments(x0=x.vals[i,],y0=sp.set$lower,y1=sp.set$upper,
lwd=10,
lend="butt",
col=c("grey30","grey60","grey90"))
points(x.vals[i,],sp.set[,"Predicted"],
pch=c(21,22,23),
bg="white")
}
legend("topleft",pch=c(21,22,23),
legend=c("Saipan","Tinian","Rota"),
bty="n")
axis(1, at= x.vals[,2], labels = levels(birdcounts.long$spp)[orderbird], las=2)
levels(birdcounts.long$spp)
